# This workflow will build a .NET project
name: .NET

on:
  push:
  pull_request:
    branches: [ "main" ]
jobs:
  build_InM:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -c R.InM
    - name: Test
      run: dotnet test -c R.InM --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:ExcludeByFile="**/*.Api/Program.cs"
    - name: Upload coverage reports to Codecov
      if: github.event_name == 'push'
      shell: bash
      run: |
        curl -Os https://uploader.codecov.io/latest/linux/codecov 
        chmod +x codecov
        ref="${{ github.ref }}"
        branch=${ref#refs/heads/}
        echo $branch
        ./codecov -b $branch -f ./tests/KiwiLoad.Api.Tests/coverage.opencover.xml -t ${{ secrets.CODECOV_TOKEN }}
  build_SqlS:
    runs-on: ubuntu-latest
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: "Y"
          MSSQL_SA_PASSWORD: ${{ secrets.MSSQL_PASSWORD }}
          MSSQL_PID: Express
        ports:
          - 1433:1433
    steps:
    - uses: actions/checkout@v3
    - name: Wait for MSSQL to be ready
      run: |
          until nc -z localhost 1433; do sleep 1; done
          echo "MSSQL is ready"
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Display Powershell information
      run: pwsh --version
    - name: Install SQL Server module
      shell: pwsh
      run: Install-Module -Name SqlServer -Force
    - name: Test SQL Server Connection (using PowerShell)
      shell: pwsh
      run: '
        Invoke-Sqlcmd  -ConnectionString "Data Source=localhost;User Id=sa;Password=${{ secrets.MSSQL_PASSWORD }};TrustServerCertificate=True" -Query "EXEC sp_databases" | Format-Table;
        Invoke-Sqlcmd  -ConnectionString "Data Source=localhost;User Id=sa;Password=${{ secrets.MSSQL_PASSWORD }};TrustServerCertificate=True" -Query "CREATE DATABASE ${{ secrets.MSSQL_DB_NAME }};" | Format-Table;
        Invoke-Sqlcmd  -ConnectionString "Data Source=localhost;User Id=sa;Password=${{ secrets.MSSQL_PASSWORD }};TrustServerCertificate=True" -Query "EXEC sp_databases" | Format-Table;
        '
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -c R.SqlS
    - name: Test
      run: dotnet test --no-build -c R.SqlS
